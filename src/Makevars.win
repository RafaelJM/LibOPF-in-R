INCLUDE=./include
SRC=./code
UTIL=util

SH=R CMD SHLIB

FLAGS=  -O3 -Wall

DLLF = $(SHLIB_LD) -shared $(DLLFLAGS)
INCFLAGS = -I$(INCLUDE) -I$(INCLUDE)/$(UTIL)

O.C.: libOPF opf_split opf_accuracy opf_accuracy4label opf_train opf_semi opf_classify opf_learn opf_distance opf_info opf_fold opf_merge opf_cluster opf_pruning statistics txt2opf opf2txt opf_check opf_normalize opfknn_train opfknn_classify opf2svm svm2opf kmeans

libOPF: libOPF-build
	echo "libOPF.a built..."

libOPF-build: \
util \
$(SRC)/OPF.o \

	$(AR) csr $(INCLUDE)/libOPF.a \
$(SRC)/common.o \
$(SRC)/set.o \
$(SRC)/gqueue.o \
$(SRC)/realheap.o \
$(SRC)/sgctree.o \
$(SRC)/subgraph.o \
$(SRC)/OPF.o \

$(SRC)/OPF.o: $(SRC)/OPF.c
	$(CC) $(FLAGS) -c $(SRC)/OPF.c $(INCFLAGS) -o $(SRC)/OPF.o

opf_split: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_split.c -L./$(INCLUDE) -o $(SRC)/opf_split.o -lOPF -lm
	$(DLLF) -o opf_split.dll $(SRC)/opf_split.o -L./$(INCLUDE) -lOPF -lm
	
opf_accuracy: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_accuracy.c  -L./$(INCLUDE) -o $(SRC)/opf_accuracy.o -lOPF -lm
	$(DLLF) -o opf_accuracy.dll $(SRC)/opf_accuracy.o -L./$(INCLUDE) -lOPF -lm
	
opf_accuracy4label: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_accuracy4label.c  -L./$(INCLUDE) -o $(SRC)/opf_accuracy4label.o -lOPF -lm
	$(DLLF) -o opf_accuracy4label.dll $(SRC)/opf_accuracy4label.o -L./$(INCLUDE) -lOPF -lm
	
opf_train: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_train.c  -L./$(INCLUDE) -o $(SRC)/opf_train.o -lOPF -lm
	$(DLLF) -o opf_train.dll $(SRC)/opf_train.o -L./$(INCLUDE) -lOPF -lm

opf_semi: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_semi.c  -L./$(INCLUDE) -o $(SRC)/opf_semi.o -lOPF -lm
	$(DLLF) -o opf_semi.dll $(SRC)/opf_semi.o -L./$(INCLUDE) -lOPF -lm
	
opf_classify: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_classify.c  -L./$(INCLUDE) -o $(SRC)/opf_classify.o -lOPF -lm
	$(DLLF) -o opf_classify.dll $(SRC)/opf_classify.o -L./$(INCLUDE) -lOPF -lm
	
opf_learn: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_learn.c  -L./$(INCLUDE) -o $(SRC)/opf_learn.o -lOPF -lm
	$(DLLF) -o opf_learn.dll $(SRC)/opf_learn.o -L./$(INCLUDE) -lOPF -lm
	
opf_distance: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_distance.c  -L./$(INCLUDE) -o $(SRC)/opf_distance.o -lOPF -lm
	$(DLLF) -o opf_distance.dll $(SRC)/opf_distance.o -L./$(INCLUDE) -lOPF -lm
	
opf_info: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_info.c  -L./$(INCLUDE) -o $(SRC)/opf_info.o -lOPF -lm
	$(DLLF) -o opf_info.dll $(SRC)/opf_info.o -L./$(INCLUDE) -lOPF -lm
	
opf_fold: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_fold.c  -L./$(INCLUDE) -o $(SRC)/opf_fold.o -lOPF -lm
	$(DLLF) -o opf_fold.dll $(SRC)/opf_fold.o -L./$(INCLUDE) -lOPF -lm
	
opf_merge: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_merge.c  -L./$(INCLUDE) -o $(SRC)/opf_merge.o -lOPF -lm
	$(DLLF) -o opf_merge.dll $(SRC)/opf_merge.o -L./$(INCLUDE) -lOPF -lm
	
opf_cluster: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_cluster.c  -L./$(INCLUDE) -o $(SRC)/opf_cluster.o -lOPF -lm
	$(DLLF) -o opf_cluster.dll $(SRC)/opf_cluster.o -L./$(INCLUDE) -lOPF -lm

opf_normalize: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_normalize.c  -L./$(INCLUDE) -o $(SRC)/opf_normalize.o -lOPF -lm
	$(DLLF) -o opf_normalize.dll $(SRC)/opf_normalize.o -L./$(INCLUDE) -lOPF -lm
	
opfknn_train: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opfknn_train.c  -L./$(INCLUDE) -o $(SRC)/opfknn_train.o -lOPF -lm
	$(DLLF) -o opfknn_train.dll $(SRC)/opfknn_train.o -L./$(INCLUDE) -lOPF -lm
	
opfknn_classify: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opfknn_classify.c  -L./$(INCLUDE) -o $(SRC)/opfknn_classify.o -lOPF -lm
	$(DLLF) -o opfknn_classify.dll $(SRC)/opfknn_classify.o -L./$(INCLUDE) -lOPF -lm
	
opf_pruning: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/opf_pruning.c  -L./$(INCLUDE) -o $(SRC)/opf_pruning.o -lOPF -lm
	$(DLLF) -o opf_pruning.dll $(SRC)/opf_pruning.o -L./$(INCLUDE) -lOPF -lm
	
statistics:
	$(CC) $(FLAGS) -c tools/src/statistics.c  -o $(SRC)/statistics.o -lm
	$(DLLF) -o statistics.dll $(SRC)/statistics.o -L./$(INCLUDE) -lOPF -lm
	
txt2opf: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c tools/src/txt2opf.c  -L./$(INCLUDE) -o $(SRC)/txt2opf.o -lOPF -lm
	$(DLLF) -o txt2opf.dll $(SRC)/txt2opf.o -L./$(INCLUDE) -lOPF -lm

opf_check: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c tools/src/opf_check.c  -L./$(INCLUDE) -o $(SRC)/opf_check.o -lOPF -lm
	$(DLLF) -o opf_check.dll $(SRC)/opf_check.o -L./$(INCLUDE) -lOPF -lm
	
opf2txt: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c tools/src/opf2txt.c  -L./$(INCLUDE) -o $(SRC)/opf2txt.o -lOPF -lm
	$(DLLF) -o opf2txt.dll $(SRC)/opf2txt.o -L./$(INCLUDE) -lOPF -lm
	
opf2svm: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c tools/src/opf2svm.c  -L./$(INCLUDE) -o $(SRC)/opf2svm.o -lOPF -lm
	$(DLLF) -o opf2svm.dll $(SRC)/opf2svm.o -L./$(INCLUDE) -lOPF -lm
	
svm2opf: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c tools/src/svm2opf.c  -L./$(INCLUDE) -o $(SRC)/svm2opf.o -lOPF -lm
	$(DLLF) -o svm2opf.dll $(SRC)/svm2opf.o -L./$(INCLUDE) -lOPF -lm
	
kmeans: libOPF
	$(CC) $(FLAGS) $(INCFLAGS) -c tools/src/kmeans.c  -L./$(INCLUDE) -o $(SRC)/kmeans.o -lOPF -lm
	$(DLLF) -o kmeans.dll $(SRC)/kmeans.o -L./$(INCLUDE) -lOPF -lm
	
util: $(SRC)/$(UTIL)/common.c $(SRC)/$(UTIL)/set.c $(SRC)/$(UTIL)/gqueue.c $(SRC)/$(UTIL)/realheap.c $(SRC)/$(UTIL)/sgctree.c $(SRC)/$(UTIL)/subgraph.c
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/$(UTIL)/common.c -o $(SRC)/common.o
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/$(UTIL)/set.c -o $(SRC)/set.o
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/$(UTIL)/gqueue.c -o $(SRC)/gqueue.o
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/$(UTIL)/realheap.c -o $(SRC)/realheap.o
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/$(UTIL)/sgctree.c -o $(SRC)/sgctree.o
	$(CC) $(FLAGS) $(INCFLAGS) -c $(SRC)/$(UTIL)/subgraph.c -o $(SRC)/subgraph.o


## Compiling LibOPF with LibIFT

opf-ift: libOPF-ift

libOPF-ift: libOPF-ift-build
	echo "libOPF.a built with IFT..."

libOPF-ift-build: \
OPF-ift.o \

	ar csr $(INCLUDE)/libOPF.a \
$(SRC)/OPF.o \


OPF-ift.o: $(SRC)/OPF.c
	$(CC) $(FLAGS) -c $(SRC)/OPF.c -I$(INCLUDE) -I$(IFT_DIR)/include \
	-o $(SRC)/OPF.o

